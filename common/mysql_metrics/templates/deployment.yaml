kind: Deployment
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}

metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        name: {{ template "fullname" . }}
      annotations:
        chart-version: {{.Chart.Version}}
        checksum/etc-configmap.conf: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ required ".Values.port_metrics missing" .Values.port_metrics | quote }}
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
    spec:
      affinity:
      {{- with .Values.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
      volumes:
      - name: config-metrics
        configMap:
          name: {{ template "fullname" . }}-etc
      containers:
      - name: metrics
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy | quote }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port_metrics }}
          initialDelaySeconds: 30
          timeoutSeconds: 10
        env:
          - name: LOGLEVEL
            value: {{ required ".Values.loglevel missing" .Values.loglevel }}
          - name: CONFIG
            value: /conf/config.yml
        ports:
          - name: metrics
            containerPort: {{ required ".Values.port_metrics missing" .Values.port_metrics }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ required ".Values.port_metrics missing" .Values.port_metrics }}
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
{{ toYaml (required "missing .resources" .Values.resources) | trim | indent 10 }}
        volumeMounts:
          - name: config-metrics
            mountPath: /conf
            readOnly: true
