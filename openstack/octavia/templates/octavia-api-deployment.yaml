apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: octavia-api
  labels:
    app.kubernetes.io/name: octavia-api
    helm.sh/chart: {{ include "octavia.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: octavia-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: octavia-api
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/octavia-etc-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-api
          image: {{required ".Values.global.imageRegistry is missing" .Values.global.imageRegistry}}/{{.Values.global.imageNamespace}}/loci-octavia:{{required "Values.imageVersion is missing" .Values.imageVersion}}
          imagePullPolicy: IfNotPresent
          {{- if .Values.api_backdoor }}
          command: ["/var/lib/openstack/bin/octavia-api"]
          {{- else }}
          command: ['dumb-init', 'kubernetes-entrypoint']
          {{- end }}
          env:
            - name: COMMAND
              value: "/usr/sbin/apachectl -D FOREGROUND"
            - name: DEPENDENCY_JOBS
              value: "{{ .Release.Name }}-migration"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: PYTHONWARNINGS
              value: "ignore:Unverified HTTPS request"
            - name: REQUESTS_CA_BUNDLE
              value: ""
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: octavia.DSN.python
            {{- end }}
          ports:
            - name: http
              containerPort: {{.Values.api_port_internal}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.pod.resources.api | indent 12 }}
          volumeMounts:
            - name: octavia-etc
              mountPath: /etc/octavia/octavia.conf
              subPath: octavia.conf
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/policy.json
              subPath: policy.json
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/logging.ini
              subPath: logging.ini
              readOnly: true
            {{- if not .Values.api_backdoor }}
            - name: octavia-etc
              mountPath: /etc/apache2/conf-enabled/octavia-api.conf
              subPath: octavia-api.conf
              readOnly: true
            {{- end }}
      volumes:
        - name: octavia-etc
          configMap:
            name: octavia-etc
